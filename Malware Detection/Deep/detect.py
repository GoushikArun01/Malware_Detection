import cv2
import numpy as np
from tensorflow.keras.models import load_model

# Define the size of the images
img_size = 64

# Load the trained model
model = load_model('malware_detection_model2.h5')

# Define a function to preprocess the input image
def preprocess_image(image_path, img_size):
    try:
        img = cv2.imread(image_path)
        if img is None:
            print(f"Error: Failed to load image at {image_path}")
            return None
        if len(img.shape) == 2:
            # Convert grayscale image to RGB
            img = cv2.cvtColor(img, cv2.COLOR_GRAY2RGB)
        img = cv2.resize(img, (img_size, img_size))
        img = np.array(img) / 255.0
        img = np.reshape(img, (1, img_size, img_size, 3))
        return img
    except Exception as e:
        print(f"Error: Failed to preprocess image at {image_path}: {str(e)}")
        return None


# Define a function to classify the input image
def classify_image(image_path, img_size):
    img = preprocess_image(image_path, img_size)
    if img is None:
        return None
    prediction = model.predict(img)
    print(prediction)
    if prediction[0] < 0.5:
        return 'benign'
    else:
        return 'malicious'

# Example usage
image_path = r'G:\Project main\Deep\train\image.png'
prediction = classify_image(image_path, img_size)
print('The file is', prediction)
